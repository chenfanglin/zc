<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd 
	">

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:datasource.properties</value>
			</list>
		</property>
	</bean>
	<!--配置数据源 -->
	<bean id="zc-dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="${jdbc_url_zc}" />
		<property name="user" value="${jdbc_user_zc}" />
		<property name="password" value="${jdbc_password_zc}" />
		<property name="minPoolSize" value="1" />                    <!--连接池中保留的最小连接数。 -->
		<property name="maxPoolSize" value="3" />                   <!--连接池中保留的最大连接数。 Default: 15 -->
		<property name="initialPoolSize" value="2" />               <!--初始化时获取的连接数，取值应在 minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="maxIdleTime" value="60" />                   <!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="acquireIncrement" value="2" />               <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="maxStatements" value="0" />
		<!-- JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。如果maxStatements与 
			maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="60" />      <!--每60秒检查所有连接池中的空闲连接。 Default: 0 -->
		<property name="acquireRetryAttempts" value="30" />          <!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="breakAfterAcquireFailure" value="false" />
		<!-- 获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试获取连接失败后该数据源将申明已断开并永久关闭。Default: 
			false -->
		<property name="testConnectionOnCheckout" value="false" />
		<!-- 因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable等方法来提升连接测试的性能。Default: 
			false -->
	</bean>

	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="zc-sqlSessionFactory">
		<!--指定数据源 -->
		<property name="dataSource" ref="zc-dataSource" />
		<!--指定实体类所在的包，用于别名处理 -->
		<property name="typeAliasesPackage" value="com.zc.model" />
		<property name="mapperLocations" value="classpath:mapper/*.xml" />
	</bean>

	<!--定义Mapper扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.zc.dao" />
		<property name="sqlSessionFactoryBeanName" value="zc-sqlSessionFactory" />
	</bean>

	<!--配置事务管理器 -->
	<bean
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		id="zc-transactionManager">
		<property name="dataSource" ref="zc-dataSource" />
	</bean>

	<!--启用声名式事务 -->
	<tx:annotation-driven transaction-manager="zc-transactionManager" />
</beans> 
